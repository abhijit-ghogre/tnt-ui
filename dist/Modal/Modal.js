"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Text_1 = __importDefault(require("../Text/Text"));
function Modal(props) {
    const { isVisible, onClose, title, body, confirmText = "OK", cancelText = "Cancel", } = props;
    return (react_1.default.createElement("div", { className: `modal modal-bottom sm:modal-middle 
      ${isVisible ? "modal-open" : ""}
    ` },
        react_1.default.createElement("div", { className: "modal-box" },
            react_1.default.createElement("button", { className: "btn btn-sm btn-circle absolute right-2 top-2", onClick: () => onClose(false) }, "x"),
            typeof title === "string" ? (react_1.default.createElement(Text_1.default, { size: "lg", weight: "bold" }, title)) : (title),
            typeof body === "string" ? react_1.default.createElement(Text_1.default, { className: "py-4" }, body) : body,
            react_1.default.createElement("div", { className: "modal-action justify-center sm:justify-end" },
                react_1.default.createElement("button", { className: "btn btn-primary flex-1 sm:flex-none sm:w-40", onClick: () => onClose(true) }, confirmText),
                react_1.default.createElement("button", { className: "btn btn-neutral btn-outline flex-1 sm:flex-none sm:w-40", onClick: () => onClose(false) }, cancelText)))));
}
exports.default = Modal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tcG9uZW50cy9Nb2RhbC9Nb2RhbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxrREFBMEI7QUFDMUIsd0RBQWdDO0FBV2hDLFNBQVMsS0FBSyxDQUFDLEtBQVk7SUFDekIsTUFBTSxFQUNKLFNBQVMsRUFDVCxPQUFPLEVBQ1AsS0FBSyxFQUNMLElBQUksRUFDSixXQUFXLEdBQUcsSUFBSSxFQUNsQixVQUFVLEdBQUcsUUFBUSxHQUN0QixHQUFHLEtBQUssQ0FBQztJQUVWLE9BQU8sQ0FDTCx1Q0FDRSxTQUFTLEVBQUU7UUFDVCxTQUFTLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRTtLQUNoQztRQUVDLHVDQUFLLFNBQVMsRUFBQyxXQUFXO1lBQ3hCLDBDQUNFLFNBQVMsRUFBQyw4Q0FBOEMsRUFDeEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFHdEI7WUFDUixPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQzNCLDhCQUFDLGNBQUksSUFBQyxJQUFJLEVBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxNQUFNLElBQzFCLEtBQUssQ0FDRCxDQUNSLENBQUMsQ0FBQyxDQUFDLENBQ0YsS0FBSyxDQUNOO1lBQ0EsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyw4QkFBQyxjQUFJLElBQUMsU0FBUyxFQUFDLE1BQU0sSUFBRSxJQUFJLENBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSTtZQUN2RSx1Q0FBSyxTQUFTLEVBQUMsNENBQTRDO2dCQUN6RCwwQ0FDRSxTQUFTLEVBQUMsNkNBQTZDLEVBQ3ZELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBRTNCLFdBQVcsQ0FDTDtnQkFDVCwwQ0FDRSxTQUFTLEVBQUMseURBQXlELEVBQ25FLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBRTVCLFVBQVUsQ0FDSixDQUNMLENBQ0YsQ0FDRixDQUNQLENBQUM7QUFDSixDQUFDO0FBRUQsa0JBQWUsS0FBSyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFRleHQgZnJvbSBcIi4uL1RleHQvVGV4dFwiO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBpc1Zpc2libGU6IGJvb2xlYW47XG4gIG9uQ2xvc2U6IChpc0NvbmZpcm06IGJvb2xlYW4pID0+IHZvaWQ7XG4gIHRpdGxlOiBSZWFjdC5SZWFjdE5vZGU7XG4gIGJvZHk6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgY29uZmlybVRleHQ/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNhbmNlbFRleHQ/OiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmZ1bmN0aW9uIE1vZGFsKHByb3BzOiBQcm9wcykge1xuICBjb25zdCB7XG4gICAgaXNWaXNpYmxlLFxuICAgIG9uQ2xvc2UsXG4gICAgdGl0bGUsXG4gICAgYm9keSxcbiAgICBjb25maXJtVGV4dCA9IFwiT0tcIixcbiAgICBjYW5jZWxUZXh0ID0gXCJDYW5jZWxcIixcbiAgfSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtgbW9kYWwgbW9kYWwtYm90dG9tIHNtOm1vZGFsLW1pZGRsZSBcbiAgICAgICR7aXNWaXNpYmxlID8gXCJtb2RhbC1vcGVuXCIgOiBcIlwifVxuICAgIGB9XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1ib3hcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tc20gYnRuLWNpcmNsZSBhYnNvbHV0ZSByaWdodC0yIHRvcC0yXCJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNsb3NlKGZhbHNlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHhcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIHt0eXBlb2YgdGl0bGUgPT09IFwic3RyaW5nXCIgPyAoXG4gICAgICAgICAgPFRleHQgc2l6ZT1cImxnXCIgd2VpZ2h0PVwiYm9sZFwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICB0aXRsZVxuICAgICAgICApfVxuICAgICAgICB7dHlwZW9mIGJvZHkgPT09IFwic3RyaW5nXCIgPyA8VGV4dCBjbGFzc05hbWU9XCJweS00XCI+e2JvZHl9PC9UZXh0PiA6IGJvZHl9XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtYWN0aW9uIGp1c3RpZnktY2VudGVyIHNtOmp1c3RpZnktZW5kXCI+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGZsZXgtMSBzbTpmbGV4LW5vbmUgc206dy00MFwiXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNsb3NlKHRydWUpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjb25maXJtVGV4dH1cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLW5ldXRyYWwgYnRuLW91dGxpbmUgZmxleC0xIHNtOmZsZXgtbm9uZSBzbTp3LTQwXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uQ2xvc2UoZmFsc2UpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjYW5jZWxUZXh0fVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNb2RhbDtcbiJdfQ==